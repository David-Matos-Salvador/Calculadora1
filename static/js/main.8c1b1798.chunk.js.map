{"version":3,"sources":["TemperatureInput.js","Calculator.js","index.js"],"names":["scaleNames","c","f","TemperatureInput","props","handleChange","bind","e","this","onTemperatureChange","target","value","temperature","scale","onChange","React","Component","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","BoilingVerdict","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","document","onmousemove","ev","x","clientX","y","clientY","body","style","backgroundPosition","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NACMA,EAAa,CACjBC,EAAG,UACHC,EAAG,cAwBYC,E,kDArBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,yDAKNC,GACXC,KAAKJ,MAAMK,oBAAoBF,EAAEG,OAAOC,S,+BAIxC,IAAMC,EAAcJ,KAAKJ,MAAMQ,YACzBC,EAAQL,KAAKJ,MAAMS,MACzB,OACE,kCACE,wDAA8Bb,EAAWa,GAAzC,KACA,2BAAOF,MAAOC,EACPE,SAAUN,KAAKH,oB,GAjBDU,IAAMC,WCCnC,SAASC,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAU,EAGjC,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAc,EAAK,GAG7B,SAASC,EAAWT,EAAaU,GAC/B,IAAMC,EAAQC,WAAWZ,GACzB,GAAIa,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,WAGjB,SAASC,EAAe3B,GACtB,OAAIA,EAAMgB,SAAW,IACZ,oDAEF,wD,IAiDMY,E,kDA7Cb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,oBAAsB,EAAKA,oBAAoB3B,KAAzB,gBAC3B,EAAK4B,uBAAyB,EAAKA,uBAAuB5B,KAA5B,gBAC9B,EAAK6B,MAAQ,CAACvB,YAAa,GAAIC,MAAO,KAJrB,E,gEAOCD,GAClBJ,KAAK4B,SAAS,CAACvB,MAAO,IAAKD,kB,6CAGNA,GACrBJ,KAAK4B,SAAS,CAACvB,MAAO,IAAKD,kB,0CAG3ByB,SAASC,YAAa,SAASC,GAC7B,IAAIC,GAAKD,EAAGE,QAAQ,EAChBC,GAAIH,EAAGI,QAAQ,EACnBN,SAASO,KAAKC,MAAMC,mBAAqBN,EAAE,MAAME,EAAE,Q,+BAKrD,IAAM7B,EAAQL,KAAK2B,MAAMtB,MACnBD,EAAcJ,KAAK2B,MAAMvB,YACzBQ,EAAoB,MAAVP,EAAgBQ,EAAWT,EAAaK,GAAaL,EAC/DM,EAAuB,MAAVL,EAAgBQ,EAAWT,EAAaO,GAAgBP,EAE3E,OACI,yBAAKmC,GAAG,eACR,kBAAC,EAAD,CACElC,MAAM,IACND,YAAaQ,EACbX,oBAAqBD,KAAKyB,sBAC5B,kBAAC,EAAD,CACEpB,MAAM,IACND,YAAaM,EACbT,oBAAqBD,KAAK0B,yBAC5B,kBAACH,EAAD,CACEX,QAASI,WAAWJ,KACpB,+D,GAzCaL,IAAMC,W,MC1B/BgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASc,eAAe,U","file":"static/js/main.8c1b1798.chunk.js","sourcesContent":["import React from 'react';\r\nconst scaleNames = {\r\n  c: 'Celsius',\r\n  f: 'Fahrenheit'\r\n};\r\nclass TemperatureInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.props.onTemperatureChange(e.target.value);\r\n    }\r\n  \r\n    render() {\r\n      const temperature = this.props.temperature;\r\n      const scale = this.props.scale;\r\n      return (\r\n        <fieldset>\r\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n          <input value={temperature}\r\n                 onChange={this.handleChange} />\r\n        </fieldset>\r\n      );\r\n    }\r\n  }\r\n  export default TemperatureInput;\r\n  ","import React from 'react';\r\n\r\n\r\nimport TemperatureInput from './TemperatureInput';\r\n\r\n  \r\n  function toCelsius(fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n  }\r\n  \r\n  function toFahrenheit(celsius) {\r\n    return (celsius * 9 / 5) + 32;\r\n  }\r\n  \r\n  function tryConvert(temperature, convert) {\r\n    const input = parseFloat(temperature);\r\n    if (Number.isNaN(input)) {\r\n      return '';\r\n    }\r\n    const output = convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n  }\r\n  \r\n  function BoilingVerdict(props) {\r\n    if (props.celsius >= 100) {\r\n      return <p>The water would boil.</p>;\r\n    }\r\n    return <p>The water would not boil.</p>;\r\n  }\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n      this.state = {temperature: '', scale: 'c'};\r\n    }\r\n  \r\n    handleCelsiusChange(temperature) {\r\n      this.setState({scale: 'c', temperature});\r\n    }\r\n  \r\n    handleFahrenheitChange(temperature) {\r\n      this.setState({scale: 'f', temperature});\r\n    }\r\n    componentDidMount(){\r\n      document.onmousemove= function(ev){\r\n        var x = -ev.clientX/2;\r\n        var y =-ev.clientY/2;\r\n        document.body.style.backgroundPosition = x+'px '+y+'px';\r\n      };\r\n    };\r\n  \r\n    render() {\r\n      const scale = this.state.scale;\r\n      const temperature = this.state.temperature;\r\n      const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n      const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\r\n  \r\n      return (        \r\n          <div id=\"pruebadecss\">\r\n          <TemperatureInput\r\n            scale=\"c\"\r\n            temperature={celsius}\r\n            onTemperatureChange={this.handleCelsiusChange} />\r\n          <TemperatureInput\r\n            scale=\"f\"\r\n            temperature={fahrenheit}\r\n            onTemperatureChange={this.handleFahrenheitChange} />\r\n          <BoilingVerdict\r\n            celsius={parseFloat(celsius)} />\r\n            <h1>Calculadora de Temperatura</h1> \r\n          </div>       \r\n      );\r\n    }\r\n  }\r\n  export default Calculator;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator';\nimport './HojaEstilo.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}